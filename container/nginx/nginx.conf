events { }

http {
    upstream posts_upstream {
        server posts_hostname:8081;
    }

    upstream blog_upstream {
        server blog_hostname:8082;
    }

    upstream store_upstream {
        server store_hostname:8083;
    }


    map $uri $app {
        ~^/blog(.*)$   remote/blog$1;
        ~^/posts(.*)$  remote/posts$1;
        ~^/store(.*)$  remote/store$1;
        default        "";
    }
    
    server {
        root /usr/share/nginx/html;
        listen 8000;
        server_name localhost;

        error_page 404 /404.html;
        error_page 500 /500.html;

        location ~* ^/(blog|posts|store)/(.*\.(css|js|png|jpg|jpeg|gif|ico|svg))$ {
            set $project $1;
            proxy_pass http://${project}_upstream/$2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Serve the main app (shell) and its static files
        location / {
            try_files $uri $uri/ /index.html;
        }

       location /sharedWorker.js {
            alias /usr/share/nginx/html/sharedWorker.js;
            if ($http_origin ~* "http://localhost:808[12]") {
                add_header 'Access-Control-Allow-Origin' $http_origin;
            }
        }

        # Proxy pass for other apps
        location ~ ^/(blog|posts|store)/(.*)$ {
            set $project $1;
            proxy_pass http://${project}_upstream/$2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            # More config
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/(blog|posts|store)/(.*)$ {
            set $PAGE $app;  # Set the PAGE variable dynamically based on the matched route
            try_files $uri $uri/ /index.html;  # Try serving the file, else fall back to index.html
        }

    }
}
